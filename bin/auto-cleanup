#!/usr/bin/env bash

# Automatic Development Cleanup Script
# This script runs periodic cleanup tasks to maintain a clean development environment

set -e

# Configuration
LOG_DIR="log"
TMP_DIR="tmp"
MAX_LOG_SIZE_MB=50
MAX_LOG_AGE_DAYS=7
MAX_TMP_AGE_DAYS=3

echo "🤖 Automatic Development Cleanup"
echo "================================"
echo ""

# Function to check if file is older than specified days
is_older_than() {
    local file="$1"
    local days="$2"
    if [ -f "$file" ]; then
        local file_age=$(( $(date +%s) - $(stat -c %Y "$file") ))
        local max_age=$(( days * 24 * 60 * 60 ))
        [ $file_age -gt $max_age ]
    else
        false
    fi
}

# Function to get file size in MB
get_file_size_mb() {
    local file="$1"
    if [ -f "$file" ]; then
        echo $(( $(stat -c %s "$file") / 1024 / 1024 ))
    else
        echo 0
    fi
}

# Clean up old log files
echo "📝 Cleaning up old log files..."
for log_file in "$LOG_DIR"/*.log*; do
    if [ -f "$log_file" ]; then
        file_size=$(get_file_size_mb "$log_file")
        if [ $file_size -gt $MAX_LOG_SIZE_MB ] || is_older_than "$log_file" $MAX_LOG_AGE_DAYS; then
            echo "   Removing old log file: $(basename "$log_file") (${file_size}MB)"
            rm -f "$log_file"
        fi
    fi
done

# Clean up old temporary files
echo "🧹 Cleaning up old temporary files..."
find "$TMP_DIR" -type f -mtime +$MAX_TMP_AGE_DAYS -delete 2>/dev/null || true
find "$TMP_DIR" -type d -empty -delete 2>/dev/null || true

# Clean up specific temporary directories
echo "🗂️  Cleaning up temporary directories..."
rm -rf "$TMP_DIR"/cache/assets/* 2>/dev/null || true
rm -rf "$TMP_DIR"/capybara/* 2>/dev/null || true
rm -f "$TMP_DIR"/pids/*.pid 2>/dev/null || true

# Clean up coverage reports older than 1 day
echo "📊 Cleaning up old coverage reports..."
if [ -d "coverage" ] && is_older_than "coverage/index.html" 1; then
    echo "   Removing old coverage report"
    rm -rf coverage/
fi

# Clean up test artifacts
echo "🧪 Cleaning up test artifacts..."
rm -rf "$TMP_DIR"/test_* 2>/dev/null || true
rm -f spec/examples.txt 2>/dev/null || true

# Clean up yarn cache if it's getting large
echo "📦 Checking yarn cache..."
if command -v yarn >/dev/null 2>&1; then
    yarn_cache_size=$(du -sm ~/.cache/yarn 2>/dev/null | cut -f1 || echo "0")
    if [ "$yarn_cache_size" != "0" ] && [ "$yarn_cache_size" -gt 500 ]; then
        echo "   Yarn cache is large (${yarn_cache_size}MB), cleaning..."
        yarn cache clean
    fi
fi

# Show summary
echo ""
echo "📊 Cleanup Summary:"
echo "   Log directory: $(du -sh "$LOG_DIR" 2>/dev/null | cut -f1 || echo 'N/A')"
echo "   Temp directory: $(du -sh "$TMP_DIR" 2>/dev/null | cut -f1 || echo 'N/A')"
echo "   Coverage: $(du -sh coverage/ 2>/dev/null | cut -f1 || echo 'N/A')"

echo ""
echo "✅ Automatic cleanup complete!"
echo ""
echo "💡 To run this automatically:"
echo "   # Add to crontab (runs daily at 2 AM):"
echo "   0 2 * * * cd /path/to/forem && bin/auto-cleanup"
echo ""
echo "   # Or run manually:"
echo "   bin/auto-cleanup"
