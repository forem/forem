#!/usr/bin/env bash

# Development Cleanup Script
# This script helps clean up common development environment issues and artifacts

set -e

echo "🧹 Development Environment Cleanup"
echo "=================================="
echo ""

# Kill any existing Rails server processes
echo "🔍 Looking for existing Rails server processes..."
if pgrep -f "rails server" > /dev/null; then
    echo "   Found Rails server processes, killing them..."
    pkill -f "rails server" || true
    sleep 2
else
    echo "   No Rails server processes found"
fi

# Remove server PID file
if [ -f "tmp/pids/server.pid" ]; then
    echo "🗑️  Removing server PID file..."
    rm -f tmp/pids/server.pid
fi

# Kill any existing Sidekiq processes
echo "🔍 Looking for existing Sidekiq processes..."
if pgrep -f "sidekiq" > /dev/null; then
    echo "   Found Sidekiq processes, killing them..."
    pkill -f "sidekiq" || true
    sleep 2
else
    echo "   No Sidekiq processes found"
fi

# Clean up any remaining Ruby processes (be careful!)
echo "🔍 Looking for other Ruby processes..."
if pgrep -f "ruby.*forem" > /dev/null; then
    echo "   Found Ruby processes, killing them..."
    pkill -f "ruby.*forem" || true
    sleep 2
else
    echo "   No other Ruby processes found"
fi

# Clean up temporary files
echo "🧹 Cleaning up temporary files..."
rm -rf tmp/cache/*
rm -rf tmp/sockets/*
rm -f tmp/pids/*.pid
rm -f tmp/restart.txt

# Clean up Capybara screenshots and downloads
echo "🧹 Cleaning up Capybara artifacts..."
rm -rf tmp/capybara/*

# Clean up log files (optional)
if [ "$1" = "--clean-logs" ] || [ "$1" = "--all" ]; then
    echo "📝 Cleaning up log files..."
    rm -f log/*.log*
    echo "   Log files cleaned"
fi

# Clean up node_modules and yarn cache (optional)
if [ "$1" = "--clean-assets" ] || [ "$1" = "--all" ]; then
    echo "📦 Cleaning up asset caches..."
    rm -rf node_modules/.cache
    rm -rf tmp/cache/assets
    yarn cache clean 2>/dev/null || echo "   Yarn cache clean failed (yarn not available)"
    echo "   Asset caches cleaned"
fi

# Clean up database artifacts (optional)
if [ "$1" = "--clean-db" ] || [ "$1" = "--all" ]; then
    echo "🗄️  Cleaning up database artifacts..."
    rm -f db/*.sqlite3
    rm -f db/*.sqlite3-*
    echo "   Database artifacts cleaned"
fi

# Clean up coverage reports (optional)
if [ "$1" = "--clean-coverage" ] || [ "$1" = "--all" ]; then
    echo "📊 Cleaning up coverage reports..."
    rm -rf coverage/
    rm -rf .coverage
    echo "   Coverage reports cleaned"
fi

# Clean up test artifacts (optional)
if [ "$1" = "--clean-tests" ] || [ "$1" = "--all" ]; then
    echo "🧪 Cleaning up test artifacts..."
    rm -rf tmp/test_*
    rm -rf spec/examples.txt
    echo "   Test artifacts cleaned"
fi

# Clean up git artifacts (optional)
if [ "$1" = "--clean-git" ] || [ "$1" = "--all" ]; then
    echo "📝 Cleaning up git artifacts..."
    git clean -fd 2>/dev/null || echo "   Git clean failed (not a git repo or no changes)"
    echo "   Git artifacts cleaned"
fi

# Show disk usage before and after
if [ "$1" = "--show-usage" ] || [ "$1" = "--all" ]; then
    echo "💾 Disk usage summary:"
    echo "   Logs directory: $(du -sh log/ 2>/dev/null | cut -f1 || echo 'N/A')"
    echo "   Temp directory: $(du -sh tmp/ 2>/dev/null | cut -f1 || echo 'N/A')"
    echo "   Coverage: $(du -sh coverage/ 2>/dev/null | cut -f1 || echo 'N/A')"
fi

echo ""
echo "✅ Cleanup complete!"
echo ""
echo "💡 Usage options:"
echo "   bin/dev-cleanup              # Basic cleanup (processes + temp files)"
echo "   bin/dev-cleanup --clean-logs # Also clean log files"
echo "   bin/dev-cleanup --clean-assets # Also clean asset caches"
echo "   bin/dev-cleanup --clean-db   # Also clean database artifacts"
echo "   bin/dev-cleanup --clean-coverage # Also clean coverage reports"
echo "   bin/dev-cleanup --clean-tests # Also clean test artifacts"
echo "   bin/dev-cleanup --clean-git  # Also clean git artifacts"
echo "   bin/dev-cleanup --show-usage # Show disk usage"
echo "   bin/dev-cleanup --all        # Clean everything"
echo ""
echo "🚀 You can now start fresh with:"
echo "   bin/startup"
